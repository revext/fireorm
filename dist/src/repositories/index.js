"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRepositoryFor = exports.registerRepositories = exports.registerRepository = void 0;
let gThis = globalThis;
function registerRepository(repositoryName) {
    if (!gThis._repositoryMapping) {
        gThis._repositoryMapping = new Map();
    }
    const repository = new repositoryName(gThis._engine);
    gThis._repositoryMapping.set(repository.getModel().getModelName(), repository);
}
exports.registerRepository = registerRepository;
function registerRepositories(repositories) {
    repositories.forEach(repository => {
        registerRepository(repository);
    });
}
exports.registerRepositories = registerRepositories;
function getRepositoryFor(modelClass) {
    if (!modelClass) {
        throw new Error(`'modelClass' is not defined on the property, also check if your property has a default value`);
    }
    const modelName = new modelClass().getModelName();
    if (!gThis._repositoryMapping.has(modelName)) {
        throw new Error(`No repository found for ${modelName}`);
    }
    const repository = gThis._repositoryMapping.get(modelName);
    return repository;
}
exports.getRepositoryFor = getRepositoryFor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVwb3NpdG9yaWVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU1BLElBQUksS0FBSyxHQUFJLFVBQTRCLENBQUE7QUFFekMsU0FBZ0Isa0JBQWtCLENBQTJDLGNBQXNDO0lBQ2pILElBQUcsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLEVBQUM7UUFDM0IsS0FBSyxDQUFDLGtCQUFrQixHQUFHLElBQUksR0FBRyxFQUEyQixDQUFDO0tBQy9EO0lBQ0QsTUFBTSxVQUFVLEdBQUcsSUFBSSxjQUFjLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ3BELEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFBO0FBQ2hGLENBQUM7QUFORCxnREFNQztBQUVELFNBQWdCLG9CQUFvQixDQUFDLFlBQXNEO0lBQ3pGLFlBQVksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBQUU7UUFDaEMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDaEMsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDO0FBSkQsb0RBSUM7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBOEIsVUFBd0M7SUFDcEcsSUFBRyxDQUFDLFVBQVUsRUFBRTtRQUNkLE1BQU0sSUFBSSxLQUFLLENBQUMsOEZBQThGLENBQUMsQ0FBQTtLQUNoSDtJQUNELE1BQU0sU0FBUyxHQUFJLElBQUksVUFBVSxFQUFZLENBQUMsWUFBWSxFQUFFLENBQUE7SUFDNUQsSUFBRyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7UUFDekMsTUFBTSxJQUFJLEtBQUssQ0FBQywyQkFBMkIsU0FBUyxFQUFFLENBQUMsQ0FBQztLQUMzRDtJQUNELE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFNLENBQUE7SUFDL0QsT0FBTyxVQUFVLENBQUE7QUFDbkIsQ0FBQztBQVZELDRDQVVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vZGVsIGZyb20gXCJ+L21vZGVscy9Nb2RlbFwiO1xyXG5pbXBvcnQgeyBDb25zdHJ1Y3RvckZ1bmN0aW9uIH0gZnJvbSBcIn4vdHlwZXMvZnVuY3Rpb25zL0NvbnN0cnVjdG9yRnVuY3Rpb25cIjtcclxuaW1wb3J0IFJlcG9zaXRvcnkgZnJvbSBcIi4vUmVwb3NpdG9yeVwiO1xyXG5pbXBvcnQgeyBHbG9iYWxUaGlzT3JtIH0gZnJvbSBcIn4vdHlwZXMvaW50ZXJuYWwvR2xvYmFsVGhpc09ybVwiO1xyXG5cclxuXHJcbmxldCBnVGhpcyA9IChnbG9iYWxUaGlzIGFzIEdsb2JhbFRoaXNPcm0pXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJSZXBvc2l0b3J5PEsgZXh0ZW5kcyBSZXBvc2l0b3J5PFQ+LCBUIGV4dGVuZHMgTW9kZWw+KHJlcG9zaXRvcnlOYW1lOiBDb25zdHJ1Y3RvckZ1bmN0aW9uPEs+KSB7XHJcbiAgaWYoIWdUaGlzLl9yZXBvc2l0b3J5TWFwcGluZyl7XHJcbiAgICBnVGhpcy5fcmVwb3NpdG9yeU1hcHBpbmcgPSBuZXcgTWFwPHN0cmluZywgUmVwb3NpdG9yeTxhbnk+PigpO1xyXG4gIH1cclxuICBjb25zdCByZXBvc2l0b3J5ID0gbmV3IHJlcG9zaXRvcnlOYW1lKGdUaGlzLl9lbmdpbmUpXHJcbiAgZ1RoaXMuX3JlcG9zaXRvcnlNYXBwaW5nLnNldChyZXBvc2l0b3J5LmdldE1vZGVsKCkuZ2V0TW9kZWxOYW1lKCksIHJlcG9zaXRvcnkpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclJlcG9zaXRvcmllcyhyZXBvc2l0b3JpZXM6IENvbnN0cnVjdG9yRnVuY3Rpb248UmVwb3NpdG9yeTxNb2RlbD4+W10pIHtcclxuICByZXBvc2l0b3JpZXMuZm9yRWFjaChyZXBvc2l0b3J5ID0+IHtcclxuICAgIHJlZ2lzdGVyUmVwb3NpdG9yeShyZXBvc2l0b3J5KVxyXG4gIH0pXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZXBvc2l0b3J5Rm9yPFIgZXh0ZW5kcyBSZXBvc2l0b3J5PE1vZGVsPj4obW9kZWxDbGFzczogQ29uc3RydWN0b3JGdW5jdGlvbjx1bmtub3duPik6IFIge1xyXG4gIGlmKCFtb2RlbENsYXNzKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCdtb2RlbENsYXNzJyBpcyBub3QgZGVmaW5lZCBvbiB0aGUgcHJvcGVydHksIGFsc28gY2hlY2sgaWYgeW91ciBwcm9wZXJ0eSBoYXMgYSBkZWZhdWx0IHZhbHVlYClcclxuICB9XHJcbiAgY29uc3QgbW9kZWxOYW1lID0gKG5ldyBtb2RlbENsYXNzKCkgYXMgTW9kZWwpLmdldE1vZGVsTmFtZSgpXHJcbiAgaWYoIWdUaGlzLl9yZXBvc2l0b3J5TWFwcGluZy5oYXMobW9kZWxOYW1lKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIHJlcG9zaXRvcnkgZm91bmQgZm9yICR7bW9kZWxOYW1lfWApO1xyXG4gIH1cclxuICBjb25zdCByZXBvc2l0b3J5ID0gZ1RoaXMuX3JlcG9zaXRvcnlNYXBwaW5nLmdldChtb2RlbE5hbWUpIGFzIFJcclxuICByZXR1cm4gcmVwb3NpdG9yeVxyXG59Il19